package advent.y2017;

import advent.Util;

public class Day01 {

	public static void main(String[] args) {
		for (String s : TEST1) {
			Util.log("%s: %d", s, sum1(s));
		}
		for (String s : TEST2) {
			Util.log("%s: %d", s, sum2(s));
		}
		Util.log("----- tests end ----");

		Util.log("production result 1: %d", sum1(IN));
		Util.log("production result 2: %d", sum2(IN));
	}

	private static final String DIGITS = "0123456789";

	private static Object sum1(String s) {
		String in = s + s.charAt(0);
		int result = 0;
		for (int i=0; i<in.length()-1; ++i) {
			char c = in.charAt(i);
			if (c == in.charAt(i+1)) {
				result += DIGITS.indexOf(c);
			}
		}
		return result;
	}

	private static Object sum2(String s) {
		String in = s + s;
		int result = 0;
		for (int i=0; i<s.length(); ++i) {
			char c = in.charAt(i);
			if (c == in.charAt(i+s.length()/2)) {
				result += DIGITS.indexOf(c);
			}
		}
		return result;
	}

	private static final String[] TEST2 = {
			"1212", "1221", "123425", "123123", "12131415"
	};

	private static final String[] TEST1 = {
			"1122", "1111", "1234", "91212129"
	};

	private static final String IN = "42812249899758728399611695139795793356913694984837941712536253226986946118574311373399233137985644636248212"
			+ "9646556286611543756564275715359874924898113424472782974789464348626278532936228881786273586278886575828239366794429223317476722337"
			+ "4243992399861536752759241133225618738143644513391869188134516852631928916271867698181287155957154445654445815146775218749359429135"
			+ "4712175185163137331612249147156469773129895198951191727268433546343621828326196215867126662529918876458981451879357637562916389634"
			+ "9665312991285776595142146261792244475721782941364787968924537841698538288459355159783985638187254653851864874544584878999193242641"
			+ "6118597567286346238534756384789237444715638456354681738241966843619342694594591242691968115129274426627615638243236217587858663914"
			+ "2477868359917944784559593192858925593595329511193743126681535278139996729538933962617866414841556117538672599246978288875794255836"
			+ "2117938629369129439717427474416851628121191639355646394276451847131182652486561415942815818785884559193483878139351841633366398788"
			+ "6578443969254232176625173564861938213414548892832666912247787238333979142243967225595939591253171758995946855248524194957933894818"
			+ "3135478728745236714566182928751877163193931468313772249353131818131521634299414168348411196947695294637831488342167795239758861356"
			+ "2958741328987734565492378977396431481215983656814486518865642645612413945129485464979535991675776338786758997128124651311153182816"
			+ "1889249351863618137972519976439926862947246992819694731427211164329682164349776841381844819638451414867939964767939542262258854324"
			+ "2265439443988284216329545854975513724761433899187996666592546654511189971494371657111332647943292593922799679995127948572283675445"
			+ "7737668191845914566732285928453781818792236447816127492445993945894435692799839217467253986218213131249786833333936332257795191937"
			+ "9426886681826294891916931541841773981864624813168346787337136148894393529761447261622146489221597199791437358154786339126331853345"
			+ "29484779322818611438194522292278787653763328944421516569181178517915745625295158611636365253948455727653672922299582352766484";
}
